name: QLDB Driver Release

on:
  push:
    branches:
      - master
    tags:
      - "v*.*.*"
      
jobs:
  test:
    name: Test
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 1
      matrix:
        os: [windows-latest, macos-latest]

    steps:
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-2

      - name: Git checkout
        uses: actions/checkout@v2
          
      - name: Install dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --configuration Release --no-restore
      - name: Unit test
        run: dotnet test Amazon.QLDB.Driver.Tests
      - name: Integration test
        run: dotnet test Amazon.QLDB.Driver.IntegrationTests --no-restore --verbosity normal --settings Amazon.QLDB.Driver.IntegrationTests/.runsettings

  release:
    name: Release
    needs: [test]
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        dotnet: ['5.0.x']
      
    steps:
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-external-id: ${{ secrets.AWS_ROLE_EXTERNAL_ID }}
          role-duration-seconds: 900
          
      - name: Wait / Sleep
        uses: jakejarvis/wait-action@v0.1.1
      - name: Git Checkout
        uses: actions/checkout@v2
        with: 
          submodules: recursive
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ matrix.dotnet }}
        
      - name: Sign
        run: |
          dotnet build --configuration Release
          
          # Push unsigned DLL to S3
          version_id=$( aws s3api put-object --bucket ${{ secrets.AWS_UNSIGNED_BUCKET }} --key ${{ secrets.AWS_KEY_DRIVER }} --body Amazon.QLDB.Driver/bin/Release/netstandard2.0/Amazon.QLDB.Driver.dll  --acl bucket-owner-full-control | jq '.VersionId' )
          
          job_id=""
          
          # Attempt to get Job ID from bucket tagging, will retry up to 3 times before exiting with a failure code.
          # Will sleep for 5 seconds between retries.
          for (( i=0; i<3; i++ ))
          do  
            # Get job ID
            id=$( aws s3api get-object-tagging --bucket ${{ secrets.AWS_UNSIGNED_BUCKET }} --key ${{ secrets.AWS_KEY_DRIVER }} --version-id ${version_id} | jq -r '.TagSet[0].Value' )
            if [ $id != "null" ]
            then
              job_id=$id
              break
            fi
            
            sleep 5s
          done
          
          if [[ $job_id = "" ]]
          then
             echo "Exiting because unable to retrieve job ID"
             exit 1
          fi

          # Poll signed S3 bucket to see if the signed artifact is there
          aws s3api wait object-exists --bucket ${{ secrets.AWS_SIGNED_BUCKET }} --key ${{ secrets.AWS_KEY_DRIVER }}-${job_id}
          
          # Get signed DLL from S3
          aws s3api get-object --bucket ${{ secrets.AWS_SIGNED_BUCKET }} --key ${{ secrets.AWS_KEY_DRIVER }}-${job_id} Amazon.QLDB.Driver/bin/Release/netstandard2.0/Amazon.QLDB.Driver.dll

      - name: Publish to NuGet
        run: |
          dotnet pack --configuration Release --no-build
          dotnet nuget push Amazon.QLDB.Driver/bin/Release/Amazon.QLDB.Driver.*.nupkg --api-key ${{ secrets.AWS_NUGET_KEY }} --source https://api.nuget.org/v3/index.json
